buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        classpath "net.serenity-bdd:serenity-gradle-plugin:3.3.0"
    }
}

plugins {
    id "org.sonarqube" version "4.0.0.2929"
}

version '1.0-SNAPSHOT'
group 'org.example'
apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: "net.serenity-bdd.serenity-gradle-plugin"

repositories {
    mavenCentral()
}

dependencies {
   // implementation 'org.testng:testng:7.7.0'
   // implementation 'org.jetbrains:annotations:24.0.1'

    implementation group: 'io.appium', name: 'java-client', version: '8.5.1'
   // testImplementation group: 'org.testng', name: 'testng', version: '7.8.0'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'net.serenity-bdd:serenity-core:3.6.12'
    testImplementation 'net.serenity-bdd:serenity-junit:3.6.12'
    implementation 'net.serenity-bdd:serenity-screenplay:3.6.12'
    implementation 'net.serenity-bdd:serenity-cucumber:3.6.12'
    testImplementation 'org.assertj:assertj-core:3.24.2'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.2'

    testImplementation 'org.slf4j:slf4j-simple:2.0.5'

}

serenity {
    testRoot = "org.example"
    requirementsDir = "src/test/resources/feature"
}

test {
    systemProperties System.getProperties()
    testLogging.showStandardStreams = true
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

gradle.startParameter.continueOnFailure = true
test.finalizedBy(aggregate)

test {
    useJUnitPlatform()
}


